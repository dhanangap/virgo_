{"version":3,"file":"virgo.bundle.min.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/components/Base/Component.ts","webpack:///./src/components/Dropdown/DropdownButton/DropdownButton.ts","webpack:///./src/components/Dropdown/DropdownMenu/DropdownMenu.ts","webpack:///./src/components/Dropdown/DropdownComponent/DropdownComponent.ts","webpack:///./src/components/Tab/TabButton/TabButton.ts","webpack:///./src/components/Tab/TabNav/TabNav.ts","webpack:///./src/components/Tab/TabNav/TabNavOverflow.html","webpack:///./src/components/Tab/TabPage/TabPage.ts","webpack:///./src/components/Tab/TabComponent/TabComponent.ts","webpack:///./src/bundle.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Virgo\"] = factory();\n\telse\n\t\troot[\"Virgo\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class Component {\n    constructor(element, config = {}) {\n        const defaultId = config.id ? config.id : undefined;\n        this.element = element;\n        this.id = this.element.id ? this.element.id : defaultId;\n        this.selector = config.selector ? config.selector : undefined;\n        this.data = {};\n        this.config = config;\n        if (this.id)\n            this.element.id = this.id;\n    }\n    static generateId() {\n        return this.className + \"-\" + this.registry.length;\n    }\n    static init(selector, config) {\n        const query = selector ? selector : `.${this.className}`;\n        const elements = document.querySelectorAll(query);\n        for (const element of elements) {\n            this.registry.push(new this(element, Object.assign(Object.assign(Object.assign({}, element.dataset), config), { selector: query, id: this.generateId() })));\n        }\n    }\n}\n// * Static Properties and Methods\nComponent.className = \"component\";\nComponent.registry = [];\n","import Component from \"../../Base/Component\";\nexport default class DropdownButton extends Component {\n}\n","import Component from \"../../Base/Component\";\nexport default class DropdownMenu extends Component {\n}\n","import Component from \"../../Base/Component\";\nimport DropdownButton from \"../DropdownButton/DropdownButton\";\nimport DropdownMenu from \"../DropdownMenu/DropdownMenu\";\nexport default class DropdownComponent extends Component {\n    constructor(element, config) {\n        super(element, config);\n        // * Object Properties and Methods\n        this.transition = \"none\";\n        if (config)\n            this.transition = config.transition ? config.transition : \"none\";\n        this.button = new DropdownButton(this.element.querySelector(\"button\"));\n        this.menu = new DropdownMenu(this.element.querySelector(\".menu\"));\n    }\n}\n// * Static Properties and Methods\nDropdownComponent.className = \"dropdown\";\n","import Component from \"../../Base/Component\";\nexport default class TabButton extends Component {\n    constructor(element, config) {\n        super(element, config);\n        if (config) {\n            this.tab = config.tab;\n            this.target = config.target;\n        }\n        if (this.target !== undefined) {\n            this.element.dataset[\"target\"] = this.target + \"\";\n        }\n        this.initEvents();\n        this.update();\n    }\n    get active() {\n        return this.element.classList.contains(\"active\");\n    }\n    set active(isActive) {\n        if (isActive) {\n            this.element.classList.add(\"active\");\n        }\n        else {\n            this.element.classList.remove(\"active\");\n        }\n    }\n    initEvents() {\n        this.element.addEventListener(\"click\", () => {\n            this.tab.goTo(this.target);\n        });\n    }\n    update() {\n        this.active = (this.target === this.tab.active);\n    }\n}\n","import Component from \"../../Base/Component\";\nimport TabButton from \"../TabButton/TabButton\";\nimport TabNavOverflow from \"./TabNavOverflow.html\";\nexport default class TabNav extends Component {\n    constructor(element, config) {\n        super(element, config);\n        this.buttons = [];\n        if (config)\n            this.tab = config.tab;\n        this.initButtons(\"button\");\n        this.initEvents();\n        this.update();\n        this.updateOverflowNav();\n    }\n    initButtons(selector) {\n        const elements = this.element.querySelectorAll(selector);\n        for (let i = 0; i < elements.length; i++) {\n            this.buttons.push(new TabButton(elements[i], {\n                selector,\n                id: elements[i].id ? elements[i].id : undefined,\n                tab: this.tab,\n                target: i\n            }));\n        }\n    }\n    initEvents() {\n        this.element.addEventListener(\"scroll\", (event) => {\n            this.updateOverflowNav();\n        });\n    }\n    update() {\n        if (this.element.scrollWidth > this.element.offsetWidth) {\n            this.addOverflowNav();\n        }\n        else {\n            this.removeOverflowNav();\n        }\n    }\n    // Add overflow navigation buttons if content is wider than container\n    addOverflowNav() {\n        if (!this.tab.element.querySelector(\".tab-nav-overflow\")) {\n            let overflow = document.createElement(\"div\");\n            overflow.setAttribute(\"class\", \"tab-nav-overflow\");\n            overflow.innerHTML = TabNavOverflow;\n            this.tab.element.appendChild(overflow);\n            const prevButton = overflow.querySelector(\".tab-nav-prev\");\n            if (prevButton) {\n                prevButton.addEventListener(\"click\", () => {\n                    this.element.scroll({\n                        left: this.element.scrollLeft - (this.element.scrollWidth / 3),\n                        behavior: \"smooth\"\n                    });\n                });\n            }\n            const nextButton = overflow.querySelector(\".tab-nav-next\");\n            if (nextButton) {\n                nextButton.addEventListener(\"click\", () => {\n                    this.element.scroll({\n                        left: this.element.scrollLeft + (this.element.scrollWidth / 3),\n                        behavior: \"smooth\"\n                    });\n                });\n            }\n        }\n    }\n    // Remove overflow navigation buttons if content is smaller than container\n    removeOverflowNav() {\n        let overflow = this.tab.element.querySelector(\".tab-nav-overflow\");\n        if (overflow)\n            overflow.remove();\n    }\n    // Show or hide overflow nav button based on scroll position\n    updateOverflowNav() {\n        // Back button\n        if (this.element.scrollLeft > 0) {\n            let button = this.tab.element.querySelector(\".tab-nav-overflow .tab-nav-prev\");\n            if (button)\n                button.classList.remove(\"hidden\");\n        }\n        else {\n            let button = this.tab.element.querySelector(\".tab-nav-overflow .tab-nav-prev\");\n            if (button)\n                button.classList.add(\"hidden\");\n        }\n        // Next button\n        if (this.element.scrollLeft < (this.element.scrollWidth - this.element.offsetWidth)) {\n            let button = this.tab.element.querySelector(\".tab-nav-overflow .tab-nav-next\");\n            if (button)\n                button.classList.remove(\"hidden\");\n        }\n        else {\n            let button = this.tab.element.querySelector(\".tab-nav-overflow .tab-nav-next\");\n            if (button)\n                button.classList.add(\"hidden\");\n        }\n    }\n}\n","// Module\nvar code = \"<button class=\\\"tab-nav-prev\\\"> <i class=\\\"icon\\\">chevron_left</i> </button> <button class=\\\"tab-nav-next\\\"> <i class=\\\"icon\\\">chevron_right</i> </button>\";\n// Exports\nexport default code;","import Component from \"../../Base/Component\";\nexport default class TabPage extends Component {\n    constructor(element, config) {\n        super(element, config);\n        if (config) {\n            this.tab = config.tab;\n            this.index = config.index;\n            this.active = (config.active != undefined) ? config.active : false;\n        }\n        if (this.index !== undefined) {\n            this.element.dataset[\"index\"] = this.index.toString();\n        }\n        this.update();\n    }\n    get active() {\n        return this.element.classList.contains(\"active\");\n    }\n    set active(isActive) {\n        if (isActive) {\n            this.element.classList.add(\"active\");\n        }\n        else {\n            this.element.classList.remove(\"active\");\n        }\n    }\n    update() {\n        this.active = (this.index === this.tab.active);\n        this.element.classList.remove(\"before\", \"after\");\n        if (!this.active) {\n            if (this.index < this.tab.active) {\n                this.element.classList.add(\"before\");\n            }\n            else {\n                this.element.classList.add(\"after\");\n            }\n        }\n    }\n}\n","import Component from \"../../Base/Component\";\nimport TabNav from \"../TabNav/TabNav\";\nimport TabPage from \"../TabPage/TabPage\";\nexport default class TabComponent extends Component {\n    constructor(element, config) {\n        super(element, config);\n        // * Object Properties and Methods\n        this.active = 0;\n        this.transition = \"none\";\n        this.nav = undefined;\n        this.pages = [];\n        let navSelector = \".nav\";\n        let pageSelector = \".pages .page\";\n        if (config) {\n            this.active = isNaN(parseInt(config.active)) ? config.active : parseInt(config.active);\n            this.transition = config.transition ? config.transition : \"none\";\n            if (config.navSelector)\n                navSelector = config.navSelector;\n            if (config.pageSelector)\n                pageSelector = config.pageSelector;\n        }\n        this.initNav(navSelector);\n        this.initPages(pageSelector);\n        this.initEvents();\n        this.updateHeight();\n    }\n    initNav(selector) {\n        const element = this.element.querySelector(selector);\n        this.nav = new TabNav(element, {\n            selector,\n            id: element.id ? element.id : undefined,\n            tab: this,\n        });\n    }\n    initPages(selector) {\n        const elements = this.element.querySelectorAll(selector);\n        for (let i = 0; i < elements.length; i++) {\n            this.pages.push(new TabPage(elements[i], {\n                selector,\n                id: elements[i].id ? elements[i].id : undefined,\n                tab: this,\n                index: i,\n                active: (i === this.active),\n            }));\n        }\n    }\n    initEvents() {\n        if (window) {\n            window.addEventListener(\"resize\", () => {\n                this.updateHeight();\n            });\n        }\n    }\n    updateHeight() {\n        let pageContainer = this.element.querySelector(\".pages\");\n        let page = this.pages.find(page => page.active);\n        if (pageContainer && page) {\n            pageContainer.style.height = page.element.offsetHeight + \"px\";\n        }\n    }\n    goTo(index) {\n        let current = this.pages.find(page => page.index === this.active);\n        let target;\n        if (typeof index === \"number\") {\n            target = this.pages.find(page => page.index === index);\n        }\n        else if (typeof index === \"string\") {\n            target = this.pages.find(page => page.id === index);\n        }\n        if (target) {\n            this.active = target.index;\n            this.nav.buttons.forEach(button => {\n                button.update();\n            });\n            this.pages.forEach(page => {\n                page.update();\n            });\n            this.updateHeight();\n        }\n    }\n}\n// * Static Properties and Methods\nTabComponent.className = \"tab\";\n","import DropdownComponent from \"./components/Dropdown/DropdownComponent/DropdownComponent\";\nimport TabComponent from \"./components/Tab/TabComponent/TabComponent\";\nif (window) {\n    // Initialize components\n    window.addEventListener('DOMContentLoaded', (event) => {\n        DropdownComponent.init();\n        TabComponent.init();\n    });\n}\nexport { DropdownComponent as Dropdown, TabComponent as Tab, };\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Component","constructor","element","config","defaultId","id","undefined","this","selector","data","static","className","registry","length","query","elements","document","querySelectorAll","push","assign","dataset","generateId","DropdownButton","DropdownMenu","DropdownComponent","super","transition","button","querySelector","menu","TabButton","tab","target","initEvents","update","active","classList","contains","isActive","add","remove","addEventListener","goTo","TabNav","buttons","initButtons","updateOverflowNav","i","event","scrollWidth","offsetWidth","addOverflowNav","removeOverflowNav","overflow","createElement","setAttribute","innerHTML","appendChild","prevButton","scroll","left","scrollLeft","behavior","nextButton","TabPage","index","toString","TabComponent","nav","pages","navSelector","pageSelector","isNaN","parseInt","initNav","initPages","updateHeight","window","pageContainer","page","find","style","height","offsetHeight","forEach","init"],"sourceRoot":""}